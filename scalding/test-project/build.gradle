plugins {
    id 'java'
}
apply plugin: 'scala'


ext {
    merge_recommendation_data_job = [:]
    azkbanCommonJobParams = [:]

    hadoop_jar = "\${artifacts_dir}/$project.name/$project.name-$project.version/lib/$project.name-$project.version-hadoop.jar"

}


group 'test-project'
version '1.0-SNAPSHOT'


sourceCompatibility = 1.8


repositories {
    mavenCentral()
    maven {
        url "http://conjars.org/repo"
    }
}


dependencies {

    compile group: 'com.twitter', name: 'scalding-core_2.11', version: '0.13.1'
    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.7.3'
    testCompile 'org.scalatest:scalatest_2.11:3.0.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.testng', name: 'testng', version: '6.8.7'

}


jar {
    manifest {
        attributes("Main-Class": "com/twitter/scalding/Tool")
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}



azkbanCommonJobParams = [
        'job.class': "\${job_class}",
        'classpath': "\${job_classpath},$hadoop_jar",
        'user.to.proxy' : '\${user_to_proxy}',
        'hadoop-inject.yarn.timeline-service.enabled' : 'false',
        'hadoop-inject.hdp.version' : '\${hdp_version}',
        'hadoop-inject.hadoop.tmp.dir' : '\${hadoop_tmp_dir}',
        'failure.emails': "\${failure_email_list}",
]



merge_recommendation_data_job = [
        'name': "merge_recommendation_data_job",
        'params': [
                'type': "hadoopJava",
                'main.args': [
                        "scalding.MergeRecDataJob",
                        "-hdfs",
                        "-queue \${parent_queue_name}",
                        "-propertiesPath hdfs://bigd-demo-08:8020/tmp/propfile.txt",
                        "-PathDelimeter ,",
                        "-ContentDelimeter \\\"\\t\"\"",
                        "-outputPath hdfs://bigd-demo-08:8020/tmp/output.csv",
                        "-validateData true"
                ]
        ] << azkbanCommonJobParams
]

//
//task azJob(){
//    doLast{
//        new File("src/main/resources/az.job").text = "type=command\n" +
//                "command=echo \"Hello World\""
//    }
//}
//
//task az_zip(type: Zip){
//    from ''
//    include 'az.job'
//    archiveName 'Azkaban.zip'
//    destinationDir(file('build/zip/Azkaban/'))
//}

//task azkabanZip(type: Jar, dependsOn: "createAzkabanJobs") {
//    from "$buildDir/jobs"
//    classifier "job"
//    extension "zip"
//}
//
//configurations.create("azkabanJob")
//configurations.archives {
//    extendsFrom configurations.azkabanJob
//}
//
//artifacts {
//    sources(azkabanZip) {
//        type "zip"
//    }
//}